import re

def normalizzation(text):
    # Dizionario per mappare le diverse forme di negazione
    negation_mapping = {
        "don't": "do not",
        "don 't": "do not",
        "don' t": "do not",
        "don ' t": "do not",
        "doesn't": "does not",
        "doesn 't": "does not",
        "doesn' t": "does not",
        "doesn ' t": "does not",
        "didn't": "did not",
        "didn 't": "did not",
        "didn' t": "did not",
        "didn ' t": "did not",
        "won't": "will not",
        "won 't": "will not",
        "won' t": "will not",
        "won ' t": "will not",
        "wouldn't": "would not",
        "wouldn 't": "would not",
        "wouldn' t": "would not",
        "wouldn ' t": "would not",
        "can't": "cannot",
        "can 't": "cannot",
        "can' t": "cannot",
        "can ' t": "cannot",
        "couldn't": "could not",
        "couldn 't": "could not",
        "couldn' t": "could not",
        "couldn ' t": "could not",
        "shouldn't": "should not",
        "shouldn 't": "should not",
        "shouldn' t": "should not",
        "shouldn ' t": "should not",
        "mightn't": "might not",
        "mightn 't": "might not",
        "mightn' t": "might not",
        "mightn ' t": "might not",
        "mustn't": "must not",
        "mustn 't": "must not",
        "mustn' t": "must not",
        "mustn ' t": "must not",
        "hasn't": "has not",
        "hasn 't": "has not",
        "hasn' t": "has not",
        "hasn ' t": "has not",
        "haven't": "have not",
        "haven 't": "have not",
        "haven' t": "have not",
        "haven ' t": "have not",
        "hadn't": "had not",
        "hadn 't": "had not",
        "hadn' t": "had not",
        "hadn ' t": "had not",
        "isn't": "is not",
        "isn 't": "is not",
        "isn' t": "is not",
        "isn ' t": "is not",
        "aren't": "are not",
        "aren 't": "are not",
        "aren' t": "are not",
        "aren ' t": "are not",
        "wasn't": "was not",
        "wasn 't": "was not",
        "wasn' t": "was not",
        "wasn ' t": "was not",
        "weren't": "were not",
        "weren 't": "were not",
        "weren' t": "were not",
        "weren ' t": "were not",
        "needn't": "need not",
        "needn 't": "need not",
        "needn' t": "need not",
        "needn ' t": "need not",
        "daren't": "dare not",
        "daren 't": "dare not",
        "daren' t": "dare not",
        "daren ' t": "dare not",
        "shan't": "shall not",
        "shan 't": "shall not",
        "shan' t": "shall not",
        "shan ' t": "shall not",
    }
       
    
    #print("Testo originale:", text)
    for pattern, replacement in negation_mapping.items():
        text = re.sub(r'\b{}\b'.format(re.escape(pattern)), replacement, text)
    #print("Testo normalizzato:", text)
    return text

#text= "my walkman doesn't broke so i'm upset now i just have to turn the stereo up real loud"
#print("Testo normalizzato:", normalizzation(text))
"""
"i'm": "i am",
"i 'm": "i am",
"i' m": "i am",
"i ' m": "i am",
"you're": "you are",
"you 're": "you are",
"you' re": "you are",
"you ' re": "you are",
"he's": "he is",
"he 's": "he is",
"he' s": "he is",
"he ' s": "he is",
"she's": "she is",
"she 's": "she is",
"she' s": "she is",
"she ' s": "she is",
"it's": "it is",
"it 's": "it is",
"it' s": "it is",
"it ' s": "it is",
"we're": "we are",
"we 're": "we are",
"we' re": "we are",
"we ' re": "we are",
"they're": "they are",
"they 're": "they are",
"they' re": "they are",
"they ' re": "they are",
"""